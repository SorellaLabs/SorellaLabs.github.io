(function() {var type_impls = {
"parquet":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ArrowReaderBuilder%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/parquet/arrow/arrow_reader/mod.rs.html#79-183\">source</a><a href=\"#impl-ArrowReaderBuilder%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"parquet/arrow/arrow_reader/struct.ArrowReaderBuilder.html\" title=\"struct parquet::arrow::arrow_reader::ArrowReaderBuilder\">ArrowReaderBuilder</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.metadata\" class=\"method\"><a class=\"src rightside\" href=\"src/parquet/arrow/arrow_reader/mod.rs.html#97-99\">source</a><h4 class=\"code-header\">pub fn <a href=\"parquet/arrow/arrow_reader/struct.ArrowReaderBuilder.html#tymethod.metadata\" class=\"fn\">metadata</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"struct\" href=\"parquet/file/metadata/struct.ParquetMetaData.html\" title=\"struct parquet::file::metadata::ParquetMetaData\">ParquetMetaData</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a reference to the <a href=\"parquet/file/metadata/struct.ParquetMetaData.html\" title=\"struct parquet::file::metadata::ParquetMetaData\"><code>ParquetMetaData</code></a> for this parquet file</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parquet_schema\" class=\"method\"><a class=\"src rightside\" href=\"src/parquet/arrow/arrow_reader/mod.rs.html#102-104\">source</a><h4 class=\"code-header\">pub fn <a href=\"parquet/arrow/arrow_reader/struct.ArrowReaderBuilder.html#tymethod.parquet_schema\" class=\"fn\">parquet_schema</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"parquet/schema/types/struct.SchemaDescriptor.html\" title=\"struct parquet::schema::types::SchemaDescriptor\">SchemaDescriptor</a></h4></section></summary><div class=\"docblock\"><p>Returns the parquet <a href=\"parquet/schema/types/struct.SchemaDescriptor.html\" title=\"struct parquet::schema::types::SchemaDescriptor\"><code>SchemaDescriptor</code></a> for this parquet file</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.schema\" class=\"method\"><a class=\"src rightside\" href=\"src/parquet/arrow/arrow_reader/mod.rs.html#107-109\">source</a><h4 class=\"code-header\">pub fn <a href=\"parquet/arrow/arrow_reader/struct.ArrowReaderBuilder.html#tymethod.schema\" class=\"fn\">schema</a>(&amp;self) -&gt; &amp;<a class=\"type\" href=\"arrow_schema/schema/type.SchemaRef.html\" title=\"type arrow_schema::schema::SchemaRef\">SchemaRef</a></h4></section></summary><div class=\"docblock\"><p>Returns the arrow <a href=\"arrow_schema/schema/type.SchemaRef.html\" title=\"type arrow_schema::schema::SchemaRef\"><code>SchemaRef</code></a> for this parquet file</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_batch_size\" class=\"method\"><a class=\"src rightside\" href=\"src/parquet/arrow/arrow_reader/mod.rs.html#113-117\">source</a><h4 class=\"code-header\">pub fn <a href=\"parquet/arrow/arrow_reader/struct.ArrowReaderBuilder.html#tymethod.with_batch_size\" class=\"fn\">with_batch_size</a>(self, batch_size: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Set the size of <a href=\"arrow_array/record_batch/struct.RecordBatch.html\" title=\"struct arrow_array::record_batch::RecordBatch\"><code>RecordBatch</code></a> to produce. Defaults to 1024\nIf the batch_size more than the file row count, use the file row count.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_row_groups\" class=\"method\"><a class=\"src rightside\" href=\"src/parquet/arrow/arrow_reader/mod.rs.html#120-125\">source</a><h4 class=\"code-header\">pub fn <a href=\"parquet/arrow/arrow_reader/struct.ArrowReaderBuilder.html#tymethod.with_row_groups\" class=\"fn\">with_row_groups</a>(self, row_groups: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Only read data from the provided row group indexes</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_projection\" class=\"method\"><a class=\"src rightside\" href=\"src/parquet/arrow/arrow_reader/mod.rs.html#128-133\">source</a><h4 class=\"code-header\">pub fn <a href=\"parquet/arrow/arrow_reader/struct.ArrowReaderBuilder.html#tymethod.with_projection\" class=\"fn\">with_projection</a>(self, mask: <a class=\"struct\" href=\"parquet/arrow/struct.ProjectionMask.html\" title=\"struct parquet::arrow::ProjectionMask\">ProjectionMask</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Only read data from the provided column indexes</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_row_selection\" class=\"method\"><a class=\"src rightside\" href=\"src/parquet/arrow/arrow_reader/mod.rs.html#145-150\">source</a><h4 class=\"code-header\">pub fn <a href=\"parquet/arrow/arrow_reader/struct.ArrowReaderBuilder.html#tymethod.with_row_selection\" class=\"fn\">with_row_selection</a>(self, selection: <a class=\"struct\" href=\"parquet/arrow/arrow_reader/struct.RowSelection.html\" title=\"struct parquet::arrow::arrow_reader::RowSelection\">RowSelection</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Provide a <a href=\"parquet/arrow/arrow_reader/struct.RowSelection.html\" title=\"struct parquet::arrow::arrow_reader::RowSelection\"><code>RowSelection</code></a> to filter out rows, and avoid fetching their\ndata into memory.</p>\n<p>Row group filtering is applied prior to this, and therefore rows from skipped\nrow groups should not be included in the <a href=\"parquet/arrow/arrow_reader/struct.RowSelection.html\" title=\"struct parquet::arrow::arrow_reader::RowSelection\"><code>RowSelection</code></a></p>\n<p>An example use case of this would be applying a selection determined by\nevaluating predicates against the <a href=\"parquet/file/page_index/index/enum.Index.html\" title=\"enum parquet::file::page_index::index::Index\"><code>Index</code></a></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_row_filter\" class=\"method\"><a class=\"src rightside\" href=\"src/parquet/arrow/arrow_reader/mod.rs.html#155-160\">source</a><h4 class=\"code-header\">pub fn <a href=\"parquet/arrow/arrow_reader/struct.ArrowReaderBuilder.html#tymethod.with_row_filter\" class=\"fn\">with_row_filter</a>(self, filter: <a class=\"struct\" href=\"parquet/arrow/arrow_reader/struct.RowFilter.html\" title=\"struct parquet::arrow::arrow_reader::RowFilter\">RowFilter</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Provide a <a href=\"parquet/arrow/arrow_reader/struct.RowFilter.html\" title=\"struct parquet::arrow::arrow_reader::RowFilter\"><code>RowFilter</code></a> to skip decoding rows</p>\n<p>Row filters are applied after row group selection and row selection</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_limit\" class=\"method\"><a class=\"src rightside\" href=\"src/parquet/arrow/arrow_reader/mod.rs.html#166-171\">source</a><h4 class=\"code-header\">pub fn <a href=\"parquet/arrow/arrow_reader/struct.ArrowReaderBuilder.html#tymethod.with_limit\" class=\"fn\">with_limit</a>(self, limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Provide a limit to the number of rows to be read</p>\n<p>The limit will be applied after any <a href=\"parquet/arrow/arrow_reader/struct.ArrowReaderBuilder.html#method.with_row_selection\" title=\"method parquet::arrow::arrow_reader::ArrowReaderBuilder::with_row_selection\"><code>Self::with_row_selection</code></a> and <a href=\"parquet/arrow/arrow_reader/struct.ArrowReaderBuilder.html#method.with_row_filter\" title=\"method parquet::arrow::arrow_reader::ArrowReaderBuilder::with_row_filter\"><code>Self::with_row_filter</code></a>\nallowing it to limit the final set of rows decoded after any pushed down predicates</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_offset\" class=\"method\"><a class=\"src rightside\" href=\"src/parquet/arrow/arrow_reader/mod.rs.html#177-182\">source</a><h4 class=\"code-header\">pub fn <a href=\"parquet/arrow/arrow_reader/struct.ArrowReaderBuilder.html#tymethod.with_offset\" class=\"fn\">with_offset</a>(self, offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Provide an offset to skip over the given number of rows</p>\n<p>The offset will be applied after any <a href=\"parquet/arrow/arrow_reader/struct.ArrowReaderBuilder.html#method.with_row_selection\" title=\"method parquet::arrow::arrow_reader::ArrowReaderBuilder::with_row_selection\"><code>Self::with_row_selection</code></a> and <a href=\"parquet/arrow/arrow_reader/struct.ArrowReaderBuilder.html#method.with_row_filter\" title=\"method parquet::arrow::arrow_reader::ArrowReaderBuilder::with_row_filter\"><code>Self::with_row_filter</code></a>\nallowing it to skip rows after any pushed down predicates</p>\n</div></details></div></details>",0,"parquet::arrow::arrow_reader::ParquetRecordBatchReaderBuilder"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()