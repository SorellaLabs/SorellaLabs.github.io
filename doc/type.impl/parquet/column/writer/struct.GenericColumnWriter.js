(function() {var type_impls = {
"parquet":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GenericColumnWriter%3C'a,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/parquet/column/writer/mod.rs.html#240-1076\">source</a><a href=\"#impl-GenericColumnWriter%3C'a,+E%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'a, E: ColumnValueEncoder&gt; <a class=\"struct\" href=\"parquet/column/writer/struct.GenericColumnWriter.html\" title=\"struct parquet::column::writer::GenericColumnWriter\">GenericColumnWriter</a>&lt;'a, E&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/parquet/column/writer/mod.rs.html#241-293\">source</a><h4 class=\"code-header\">pub fn <a href=\"parquet/column/writer/struct.GenericColumnWriter.html#tymethod.new\" class=\"fn\">new</a>(\n    descr: <a class=\"type\" href=\"parquet/schema/types/type.ColumnDescPtr.html\" title=\"type parquet::schema::types::ColumnDescPtr\">ColumnDescPtr</a>,\n    props: <a class=\"type\" href=\"parquet/file/properties/type.WriterPropertiesPtr.html\" title=\"type parquet::file::properties::WriterPropertiesPtr\">WriterPropertiesPtr</a>,\n    page_writer: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"parquet/column/page/trait.PageWriter.html\" title=\"trait parquet::column::page::PageWriter\">PageWriter</a> + 'a&gt;\n) -&gt; Self</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_batch\" class=\"method\"><a class=\"src rightside\" href=\"src/parquet/column/writer/mod.rs.html#386-393\">source</a><h4 class=\"code-header\">pub fn <a href=\"parquet/column/writer/struct.GenericColumnWriter.html#tymethod.write_batch\" class=\"fn\">write_batch</a>(\n    &amp;mut self,\n    values: &amp;E::Values,\n    def_levels: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>]&gt;,\n    rep_levels: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>]&gt;\n) -&gt; <a class=\"type\" href=\"parquet/errors/type.Result.html\" title=\"type parquet::errors::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Writes batch of values, definition levels and repetition levels.\nReturns number of values processed (written).</p>\n<p>If definition and repetition levels are provided, we write fully those levels and\nselect how many values to write (this number will be returned), since number of\nactual written values may be smaller than provided values.</p>\n<p>If only values are provided, then all values are written and the length of\nof the values buffer is returned.</p>\n<p>Definition and/or repetition levels can be omitted, if values are\nnon-nullable and/or non-repeated.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_batch_with_statistics\" class=\"method\"><a class=\"src rightside\" href=\"src/parquet/column/writer/mod.rs.html#402-420\">source</a><h4 class=\"code-header\">pub fn <a href=\"parquet/column/writer/struct.GenericColumnWriter.html#tymethod.write_batch_with_statistics\" class=\"fn\">write_batch_with_statistics</a>(\n    &amp;mut self,\n    values: &amp;E::Values,\n    def_levels: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>]&gt;,\n    rep_levels: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>]&gt;,\n    min: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;E::T&gt;,\n    max: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;E::T&gt;,\n    distinct_count: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt;\n) -&gt; <a class=\"type\" href=\"parquet/errors/type.Result.html\" title=\"type parquet::errors::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Writer may optionally provide pre-calculated statistics for use when computing\nchunk-level statistics</p>\n<p>NB: <a href=\"parquet/file/properties/struct.WriterProperties.html#method.statistics_enabled\" title=\"method parquet::file::properties::WriterProperties::statistics_enabled\"><code>WriterProperties::statistics_enabled</code></a> must be set to <a href=\"parquet/file/properties/enum.EnabledStatistics.html#variant.Chunk\" title=\"variant parquet::file::properties::EnabledStatistics::Chunk\"><code>EnabledStatistics::Chunk</code></a>\nfor these statistics to take effect. If <a href=\"parquet/file/properties/enum.EnabledStatistics.html#variant.None\" title=\"variant parquet::file::properties::EnabledStatistics::None\"><code>EnabledStatistics::None</code></a> they will be ignored,\nand if <a href=\"parquet/file/properties/enum.EnabledStatistics.html#variant.Page\" title=\"variant parquet::file::properties::EnabledStatistics::Page\"><code>EnabledStatistics::Page</code></a> the chunk statistics will instead be computed from the\ncomputed page statistics</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_total_bytes_written\" class=\"method\"><a class=\"src rightside\" href=\"src/parquet/column/writer/mod.rs.html#427-429\">source</a><h4 class=\"code-header\">pub fn <a href=\"parquet/column/writer/struct.GenericColumnWriter.html#tymethod.get_total_bytes_written\" class=\"fn\">get_total_bytes_written</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns total number of bytes written by this column writer so far.\nThis value is also returned when column writer is closed.</p>\n<p>Note: this value does not include any buffered data that has not\nyet been flushed to a page.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_total_rows_written\" class=\"method\"><a class=\"src rightside\" href=\"src/parquet/column/writer/mod.rs.html#444-446\">source</a><h4 class=\"code-header\">pub fn <a href=\"parquet/column/writer/struct.GenericColumnWriter.html#tymethod.get_total_rows_written\" class=\"fn\">get_total_rows_written</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns total number of rows written by this column writer so far.\nThis value is also returned when column writer is closed.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_descriptor\" class=\"method\"><a class=\"src rightside\" href=\"src/parquet/column/writer/mod.rs.html#449-451\">source</a><h4 class=\"code-header\">pub fn <a href=\"parquet/column/writer/struct.GenericColumnWriter.html#tymethod.get_descriptor\" class=\"fn\">get_descriptor</a>(&amp;self) -&gt; &amp;<a class=\"type\" href=\"parquet/schema/types/type.ColumnDescPtr.html\" title=\"type parquet::schema::types::ColumnDescPtr\">ColumnDescPtr</a></h4></section></summary><div class=\"docblock\"><p>Returns a reference to a <a href=\"parquet/schema/types/type.ColumnDescPtr.html\" title=\"type parquet::schema::types::ColumnDescPtr\"><code>ColumnDescPtr</code></a></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.close\" class=\"method\"><a class=\"src rightside\" href=\"src/parquet/column/writer/mod.rs.html#455-492\">source</a><h4 class=\"code-header\">pub fn <a href=\"parquet/column/writer/struct.GenericColumnWriter.html#tymethod.close\" class=\"fn\">close</a>(self) -&gt; <a class=\"type\" href=\"parquet/errors/type.Result.html\" title=\"type parquet::errors::Result\">Result</a>&lt;<a class=\"struct\" href=\"parquet/column/writer/struct.ColumnCloseResult.html\" title=\"struct parquet::column::writer::ColumnCloseResult\">ColumnCloseResult</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Finalizes writes and closes the column writer.\nReturns total bytes written, total rows written and column chunk metadata.</p>\n</div></details></div></details>",0,"parquet::column::writer::ColumnWriterImpl"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()