(function() {var type_impls = {
"brotli":[],
"error_chain":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ExitCode-for-()\" class=\"impl\"><a class=\"src rightside\" href=\"src/error_chain/quick_main.rs.html#77-81\">source</a><a href=\"#impl-ExitCode-for-()\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"error_chain/trait.ExitCode.html\" title=\"trait error_chain::ExitCode\">ExitCode</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.code\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/error_chain/quick_main.rs.html#78-80\">source</a><a href=\"#method.code\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"error_chain/trait.ExitCode.html#tymethod.code\" class=\"fn\">code</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Returns the value to use as the exit status.</div></details></div></details>","ExitCode","error_chain::backtrace::imp::Backtrace"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()