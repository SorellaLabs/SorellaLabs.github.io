(function() {var type_impls = {
"reth_tracing_ext":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pool%3CV,+T,+S%3E\" class=\"impl\"><a href=\"#impl-Pool%3CV,+T,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;V, T, S&gt; Pool&lt;V, T, S&gt;<div class=\"where\">where\n    V: TransactionValidator,\n    T: TransactionOrdering&lt;Transaction = &lt;V as TransactionValidator&gt;::Transaction&gt;,\n    S: BlobStore,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new</a>(\n    validator: V,\n    ordering: T,\n    blob_store: S,\n    config: PoolConfig\n) -&gt; Pool&lt;V, T, S&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new transaction pool instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.config\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">config</a>(&amp;self) -&gt; &amp;PoolConfig</h4></section></summary><div class=\"docblock\"><p>Get the config the pool was configured with.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Number of transactions in the entire pool</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Whether the pool is empty</p>\n</div></details></div></details>",0,"reth_tracing_ext::RethTxPool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pool%3CTransactionValidationTaskExecutor%3CEthTransactionValidator%3CClient,+EthPooledTransaction%3E%3E,+CoinbaseTipOrdering%3CEthPooledTransaction%3E,+S%3E\" class=\"impl\"><a href=\"#impl-Pool%3CTransactionValidationTaskExecutor%3CEthTransactionValidator%3CClient,+EthPooledTransaction%3E%3E,+CoinbaseTipOrdering%3CEthPooledTransaction%3E,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Client, S&gt; Pool&lt;TransactionValidationTaskExecutor&lt;EthTransactionValidator&lt;Client, EthPooledTransaction&gt;&gt;, CoinbaseTipOrdering&lt;EthPooledTransaction&gt;, S&gt;<div class=\"where\">where\n    Client: StateProviderFactory + BlockReaderIdExt + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static,\n    S: BlobStore,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eth_pool\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">eth_pool</a>(\n    validator: TransactionValidationTaskExecutor&lt;EthTransactionValidator&lt;Client, EthPooledTransaction&gt;&gt;,\n    blob_store: S,\n    config: PoolConfig\n) -&gt; Pool&lt;TransactionValidationTaskExecutor&lt;EthTransactionValidator&lt;Client, EthPooledTransaction&gt;&gt;, CoinbaseTipOrdering&lt;EthPooledTransaction&gt;, S&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a new [Pool] that uses the default [TransactionValidationTaskExecutor] when\nvalidating [EthPooledTransaction]s and ords via [CoinbaseTipOrdering]</p>\n<h5 id=\"example\"><a href=\"#example\">Example</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>reth_primitives::MAINNET;\n<span class=\"kw\">use </span>reth_provider::{BlockReaderIdExt, StateProviderFactory};\n<span class=\"kw\">use </span>reth_tasks::TokioTaskExecutor;\n<span class=\"kw\">use </span>reth_transaction_pool::{\n    blobstore::InMemoryBlobStore, Pool, TransactionValidationTaskExecutor,\n};\n<span class=\"kw\">let </span>blob_store = InMemoryBlobStore::default();\n<span class=\"kw\">let </span>pool = Pool::eth_pool(\n    TransactionValidationTaskExecutor::eth(\n        client,\n        MAINNET.clone(),\n        blob_store.clone(),\n        TokioTaskExecutor::default(),\n    ),\n    blob_store,\n    Default::default(),\n);</code></pre></div>\n</div></details></div></details>",0,"reth_tracing_ext::RethTxPool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TransactionPool-for-Pool%3CV,+T,+S%3E\" class=\"impl\"><a href=\"#impl-TransactionPool-for-Pool%3CV,+T,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;V, T, S&gt; TransactionPool for Pool&lt;V, T, S&gt;<div class=\"where\">where\n    V: TransactionValidator,\n    T: TransactionOrdering&lt;Transaction = &lt;V as TransactionValidator&gt;::Transaction&gt;,\n    S: BlobStore,</div></h3></section></summary><div class=\"docblock\"><p>implements the <code>TransactionPool</code> interface for various transaction pool API consumers.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Transaction\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Transaction\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Transaction</a> = &lt;T as TransactionOrdering&gt;::Transaction</h4></section></summary><div class='docblock'>The transaction type of the pool</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pool_size\" class=\"method trait-impl\"><a href=\"#method.pool_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">pool_size</a>(&amp;self) -&gt; PoolSize</h4></section></summary><div class='docblock'>Returns stats about the pool and all sub-pools.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.block_info\" class=\"method trait-impl\"><a href=\"#method.block_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">block_info</a>(&amp;self) -&gt; BlockInfo</h4></section></summary><div class='docblock'>Returns the block the pool is currently tracking. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_transaction_and_subscribe\" class=\"method trait-impl\"><a href=\"#method.add_transaction_and_subscribe\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">add_transaction_and_subscribe</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    origin: TransactionOrigin,\n    transaction: &lt;Pool&lt;V, T, S&gt; as TransactionPool&gt;::Transaction\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;TransactionEvents, PoolError&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    Pool&lt;V, T, S&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Adds an <em>unvalidated</em> transaction into the pool and subscribe to state changes. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_transaction\" class=\"method trait-impl\"><a href=\"#method.add_transaction\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">add_transaction</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    origin: TransactionOrigin,\n    transaction: &lt;Pool&lt;V, T, S&gt; as TransactionPool&gt;::Transaction\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;FixedBytes&lt;32&gt;, PoolError&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    Pool&lt;V, T, S&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Adds an <em>unvalidated</em> transaction into the pool. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_transactions\" class=\"method trait-impl\"><a href=\"#method.add_transactions\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">add_transactions</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    origin: TransactionOrigin,\n    transactions: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&lt;Pool&lt;V, T, S&gt; as TransactionPool&gt;::Transaction&gt;\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;FixedBytes&lt;32&gt;, PoolError&gt;&gt;, PoolError&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    Pool&lt;V, T, S&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Adds the given <em>unvalidated</em> transaction into the pool. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transaction_event_listener\" class=\"method trait-impl\"><a href=\"#method.transaction_event_listener\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">transaction_event_listener</a>(\n    &amp;self,\n    tx_hash: FixedBytes&lt;32&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;TransactionEvents&gt;</h4></section></summary><div class='docblock'>Returns a new transaction change event stream for the given transaction. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.all_transactions_event_listener\" class=\"method trait-impl\"><a href=\"#method.all_transactions_event_listener\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">all_transactions_event_listener</a>(\n    &amp;self\n) -&gt; AllTransactionsEvents&lt;&lt;Pool&lt;V, T, S&gt; as TransactionPool&gt;::Transaction&gt;</h4></section></summary><div class='docblock'>Returns a new transaction change event stream for <em>all</em> transactions in the pool.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pending_transactions_listener_for\" class=\"method trait-impl\"><a href=\"#method.pending_transactions_listener_for\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">pending_transactions_listener_for</a>(\n    &amp;self,\n    kind: TransactionListenerKind\n) -&gt; Receiver&lt;FixedBytes&lt;32&gt;&gt;</h4></section></summary><div class='docblock'>Returns a new Stream that yields transactions hashes for new <strong>pending</strong> transactions\ninserted into the pool depending on the given [TransactionListenerKind] argument.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.blob_transaction_sidecars_listener\" class=\"method trait-impl\"><a href=\"#method.blob_transaction_sidecars_listener\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">blob_transaction_sidecars_listener</a>(&amp;self) -&gt; Receiver&lt;NewBlobSidecar&gt;</h4></section></summary><div class='docblock'>Returns a new Stream that yields blob “sidecars” (blobs w/ assoc. kzg\ncommitments/proofs) for eip-4844 transactions inserted into the pool</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_transactions_listener_for\" class=\"method trait-impl\"><a href=\"#method.new_transactions_listener_for\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">new_transactions_listener_for</a>(\n    &amp;self,\n    kind: TransactionListenerKind\n) -&gt; Receiver&lt;NewTransactionEvent&lt;&lt;Pool&lt;V, T, S&gt; as TransactionPool&gt;::Transaction&gt;&gt;</h4></section></summary><div class='docblock'>Returns a new stream that yields new valid transactions added to the pool\ndepending on the given [TransactionListenerKind] argument.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pooled_transaction_hashes\" class=\"method trait-impl\"><a href=\"#method.pooled_transaction_hashes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">pooled_transaction_hashes</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;FixedBytes&lt;32&gt;&gt;</h4></section></summary><div class='docblock'>Returns the <em>hashes</em> of all transactions in the pool. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pooled_transaction_hashes_max\" class=\"method trait-impl\"><a href=\"#method.pooled_transaction_hashes_max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">pooled_transaction_hashes_max</a>(&amp;self, max: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;FixedBytes&lt;32&gt;&gt;</h4></section></summary><div class='docblock'>Returns only the first <code>max</code> hashes of transactions in the pool. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pooled_transactions\" class=\"method trait-impl\"><a href=\"#method.pooled_transactions\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">pooled_transactions</a>(\n    &amp;self\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;ValidPoolTransaction&lt;&lt;Pool&lt;V, T, S&gt; as TransactionPool&gt;::Transaction&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Returns the <em>full</em> transaction objects all transactions in the pool. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pooled_transactions_max\" class=\"method trait-impl\"><a href=\"#method.pooled_transactions_max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">pooled_transactions_max</a>(\n    &amp;self,\n    max: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;ValidPoolTransaction&lt;&lt;Pool&lt;V, T, S&gt; as TransactionPool&gt;::Transaction&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Returns only the first <code>max</code> transactions in the pool. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_pooled_transaction_elements\" class=\"method trait-impl\"><a href=\"#method.get_pooled_transaction_elements\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_pooled_transaction_elements</a>(\n    &amp;self,\n    tx_hashes: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;FixedBytes&lt;32&gt;&gt;,\n    limit: GetPooledTransactionLimit\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;PooledTransactionsElement&gt;</h4></section></summary><div class='docblock'>Returns converted [PooledTransactionsElement] for the given transaction hashes. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.best_transactions\" class=\"method trait-impl\"><a href=\"#method.best_transactions\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">best_transactions</a>(\n    &amp;self\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn BestTransactions&lt;Item = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;ValidPoolTransaction&lt;&lt;Pool&lt;V, T, S&gt; as TransactionPool&gt;::Transaction&gt;&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Returns an iterator that yields transactions that are ready for block production. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.best_transactions_with_base_fee\" class=\"method trait-impl\"><a href=\"#method.best_transactions_with_base_fee\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">best_transactions_with_base_fee</a>(\n    &amp;self,\n    base_fee: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn BestTransactions&lt;Item = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;ValidPoolTransaction&lt;&lt;Pool&lt;V, T, S&gt; as TransactionPool&gt;::Transaction&gt;&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Returns an iterator that yields transactions that are ready for block production with the\ngiven base fee. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.best_transactions_with_attributes\" class=\"method trait-impl\"><a href=\"#method.best_transactions_with_attributes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">best_transactions_with_attributes</a>(\n    &amp;self,\n    best_transactions_attributes: BestTransactionsAttributes\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn BestTransactions&lt;Item = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;ValidPoolTransaction&lt;&lt;Pool&lt;V, T, S&gt; as TransactionPool&gt;::Transaction&gt;&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Returns an iterator that yields transactions that are ready for block production with the\ngiven base fee and optional blob fee attributes. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pending_transactions\" class=\"method trait-impl\"><a href=\"#method.pending_transactions\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">pending_transactions</a>(\n    &amp;self\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;ValidPoolTransaction&lt;&lt;Pool&lt;V, T, S&gt; as TransactionPool&gt;::Transaction&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Returns all transactions that can be included in the next block. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.queued_transactions\" class=\"method trait-impl\"><a href=\"#method.queued_transactions\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">queued_transactions</a>(\n    &amp;self\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;ValidPoolTransaction&lt;&lt;Pool&lt;V, T, S&gt; as TransactionPool&gt;::Transaction&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Returns all transactions that can be included in <em>future</em> blocks. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.all_transactions\" class=\"method trait-impl\"><a href=\"#method.all_transactions\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">all_transactions</a>(\n    &amp;self\n) -&gt; AllPoolTransactions&lt;&lt;Pool&lt;V, T, S&gt; as TransactionPool&gt;::Transaction&gt;</h4></section></summary><div class='docblock'>Returns all transactions that are currently in the pool grouped by whether they are ready\nfor inclusion in the next block or not. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_transactions\" class=\"method trait-impl\"><a href=\"#method.remove_transactions\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remove_transactions</a>(\n    &amp;self,\n    hashes: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;FixedBytes&lt;32&gt;&gt;\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;ValidPoolTransaction&lt;&lt;Pool&lt;V, T, S&gt; as TransactionPool&gt;::Transaction&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Removes all transactions corresponding to the given hashes. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.retain_unknown\" class=\"method trait-impl\"><a href=\"#method.retain_unknown\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">retain_unknown</a>(&amp;self, hashes: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;FixedBytes&lt;32&gt;&gt;)</h4></section></summary><div class='docblock'>Retains only those hashes that are unknown to the pool.\nIn other words, removes all transactions from the given set that are currently present in\nthe pool. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method trait-impl\"><a href=\"#method.get\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get</a>(\n    &amp;self,\n    tx_hash: &amp;FixedBytes&lt;32&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;ValidPoolTransaction&lt;&lt;Pool&lt;V, T, S&gt; as TransactionPool&gt;::Transaction&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Returns the transaction for the given hash.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_all\" class=\"method trait-impl\"><a href=\"#method.get_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_all</a>(\n    &amp;self,\n    txs: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;FixedBytes&lt;32&gt;&gt;\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;ValidPoolTransaction&lt;&lt;Pool&lt;V, T, S&gt; as TransactionPool&gt;::Transaction&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Returns all transactions objects for the given hashes. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_propagated\" class=\"method trait-impl\"><a href=\"#method.on_propagated\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_propagated</a>(&amp;self, txs: PropagatedTransactions)</h4></section></summary><div class='docblock'>Notify the pool about transactions that are propagated to peers. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_transactions_by_sender\" class=\"method trait-impl\"><a href=\"#method.get_transactions_by_sender\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_transactions_by_sender</a>(\n    &amp;self,\n    sender: Address\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;ValidPoolTransaction&lt;&lt;Pool&lt;V, T, S&gt; as TransactionPool&gt;::Transaction&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Returns all transactions sent by a given user</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_transactions_by_sender_and_nonce\" class=\"method trait-impl\"><a href=\"#method.get_transactions_by_sender_and_nonce\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_transactions_by_sender_and_nonce</a>(\n    &amp;self,\n    sender: Address,\n    nonce: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;ValidPoolTransaction&lt;&lt;Pool&lt;V, T, S&gt; as TransactionPool&gt;::Transaction&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Returns a transaction sent by a given user with a given nonce</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_transactions_by_origin\" class=\"method trait-impl\"><a href=\"#method.get_transactions_by_origin\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_transactions_by_origin</a>(\n    &amp;self,\n    origin: TransactionOrigin\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;ValidPoolTransaction&lt;&lt;Pool&lt;V, T, S&gt; as TransactionPool&gt;::Transaction&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Returns all transactions that where submitted with the given [TransactionOrigin]</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unique_senders\" class=\"method trait-impl\"><a href=\"#method.unique_senders\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">unique_senders</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/collections/hash/set/struct.HashSet.html\" title=\"struct std::collections::hash::set::HashSet\">HashSet</a>&lt;Address&gt;</h4></section></summary><div class='docblock'>Returns a set of all senders of transactions in the pool</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_blob\" class=\"method trait-impl\"><a href=\"#method.get_blob\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_blob</a>(\n    &amp;self,\n    tx_hash: FixedBytes&lt;32&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;BlobTransactionSidecar&gt;, BlobStoreError&gt;</h4></section></summary><div class='docblock'>Returns the [BlobTransactionSidecar] for the given transaction hash if it exists in the blob\nstore.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_all_blobs\" class=\"method trait-impl\"><a href=\"#method.get_all_blobs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_all_blobs</a>(\n    &amp;self,\n    tx_hashes: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;FixedBytes&lt;32&gt;&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(FixedBytes&lt;32&gt;, BlobTransactionSidecar)&gt;, BlobStoreError&gt;</h4></section></summary><div class='docblock'>Returns all [BlobTransactionSidecar] for the given transaction hashes if they exists in the\nblob store. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_all_blobs_exact\" class=\"method trait-impl\"><a href=\"#method.get_all_blobs_exact\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_all_blobs_exact</a>(\n    &amp;self,\n    tx_hashes: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;FixedBytes&lt;32&gt;&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;BlobTransactionSidecar&gt;, BlobStoreError&gt;</h4></section></summary><div class='docblock'>Returns the exact [BlobTransactionSidecar] for the given transaction hashes in the order\nthey were requested. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_external_transaction\" class=\"method trait-impl\"><a href=\"#method.add_external_transaction\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">add_external_transaction</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    transaction: Self::Transaction\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;FixedBytes&lt;32&gt;, PoolError&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    Self: 'async_trait,</div></h4></section></summary><div class='docblock'>Imports an <em>external</em> transaction. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_external_transactions\" class=\"method trait-impl\"><a href=\"#method.add_external_transactions\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">add_external_transactions</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    transactions: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;Self::Transaction&gt;\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;FixedBytes&lt;32&gt;, PoolError&gt;&gt;, PoolError&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    Self: 'async_trait,</div></h4></section></summary><div class='docblock'>Imports all <em>external</em> transactions <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pending_transactions_listener\" class=\"method trait-impl\"><a href=\"#method.pending_transactions_listener\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">pending_transactions_listener</a>(&amp;self) -&gt; Receiver&lt;FixedBytes&lt;32&gt;&gt;</h4></section></summary><div class='docblock'>Returns a new Stream that yields transactions hashes for new <strong>pending</strong> transactions\ninserted into the pool that are allowed to be propagated. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_transactions_listener\" class=\"method trait-impl\"><a href=\"#method.new_transactions_listener\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">new_transactions_listener</a>(\n    &amp;self\n) -&gt; Receiver&lt;NewTransactionEvent&lt;Self::Transaction&gt;&gt;</h4></section></summary><div class='docblock'>Returns a new stream that yields new valid transactions added to the pool.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_pending_pool_transactions_listener\" class=\"method trait-impl\"><a href=\"#method.new_pending_pool_transactions_listener\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">new_pending_pool_transactions_listener</a>(\n    &amp;self\n) -&gt; NewSubpoolTransactionStream&lt;Self::Transaction&gt;</h4></section></summary><div class='docblock'>Returns a new Stream that yields new transactions added to the pending sub-pool. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_basefee_pool_transactions_listener\" class=\"method trait-impl\"><a href=\"#method.new_basefee_pool_transactions_listener\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">new_basefee_pool_transactions_listener</a>(\n    &amp;self\n) -&gt; NewSubpoolTransactionStream&lt;Self::Transaction&gt;</h4></section></summary><div class='docblock'>Returns a new Stream that yields new transactions added to the basefee sub-pool. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_queued_transactions_listener\" class=\"method trait-impl\"><a href=\"#method.new_queued_transactions_listener\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">new_queued_transactions_listener</a>(\n    &amp;self\n) -&gt; NewSubpoolTransactionStream&lt;Self::Transaction&gt;</h4></section></summary><div class='docblock'>Returns a new Stream that yields new transactions added to the queued-pool. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains\" class=\"method trait-impl\"><a href=\"#method.contains\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">contains</a>(&amp;self, tx_hash: &amp;FixedBytes&lt;32&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns if the transaction for the given hash is already included in this pool.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_local_transactions\" class=\"method trait-impl\"><a href=\"#method.get_local_transactions\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_local_transactions</a>(\n    &amp;self\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;ValidPoolTransaction&lt;Self::Transaction&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Returns all transactions that where submitted as [TransactionOrigin::Local]</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_private_transactions\" class=\"method trait-impl\"><a href=\"#method.get_private_transactions\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_private_transactions</a>(\n    &amp;self\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;ValidPoolTransaction&lt;Self::Transaction&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Returns all transactions that where submitted as [TransactionOrigin::Private]</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_external_transactions\" class=\"method trait-impl\"><a href=\"#method.get_external_transactions\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_external_transactions</a>(\n    &amp;self\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;ValidPoolTransaction&lt;Self::Transaction&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Returns all transactions that where submitted as [TransactionOrigin::External]</div></details></div></details>","TransactionPool","reth_tracing_ext::RethTxPool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Pool%3CV,+T,+S%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Pool%3CV,+T,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;V, T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Pool&lt;V, T, S&gt;<div class=\"where\">where\n    T: TransactionOrdering,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Pool&lt;V, T, S&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","reth_tracing_ext::RethTxPool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TransactionPoolExt-for-Pool%3CV,+T,+S%3E\" class=\"impl\"><a href=\"#impl-TransactionPoolExt-for-Pool%3CV,+T,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;V, T, S&gt; TransactionPoolExt for Pool&lt;V, T, S&gt;<div class=\"where\">where\n    V: TransactionValidator,\n    T: TransactionOrdering&lt;Transaction = &lt;V as TransactionValidator&gt;::Transaction&gt; + TransactionOrdering,\n    S: BlobStore,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_block_info\" class=\"method trait-impl\"><a href=\"#method.set_block_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">set_block_info</a>(&amp;self, info: BlockInfo)</h4></section></summary><div class='docblock'>Sets the current block info for the pool.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_canonical_state_change\" class=\"method trait-impl\"><a href=\"#method.on_canonical_state_change\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_canonical_state_change</a>(&amp;self, update: CanonicalStateUpdate&lt;'_&gt;)</h4></section></summary><div class='docblock'>Event listener for when the pool needs to be updated <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.update_accounts\" class=\"method trait-impl\"><a href=\"#method.update_accounts\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">update_accounts</a>(&amp;self, accounts: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;ChangedAccount&gt;)</h4></section></summary><div class='docblock'>Updates the accounts in the pool</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.delete_blob\" class=\"method trait-impl\"><a href=\"#method.delete_blob\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">delete_blob</a>(&amp;self, tx: FixedBytes&lt;32&gt;)</h4></section></summary><div class='docblock'>Deletes the blob sidecar for the given transaction from the blob store</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.delete_blobs\" class=\"method trait-impl\"><a href=\"#method.delete_blobs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">delete_blobs</a>(&amp;self, txs: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;FixedBytes&lt;32&gt;&gt;)</h4></section></summary><div class='docblock'>Deletes multiple blob sidecars from the blob store</div></details></div></details>","TransactionPoolExt","reth_tracing_ext::RethTxPool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Pool%3CV,+T,+S%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Pool%3CV,+T,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;V, T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Pool&lt;V, T, S&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + TransactionOrdering,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","reth_tracing_ext::RethTxPool"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()